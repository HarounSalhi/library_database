SET SERVEROUTPUT ON

--Q1

--CREATE OR REPLACE PROCEDURE P_AFF_INC
--IS
--	BEGIN
--		FOR REC_AFF_INC IN (SELECT O.TITRE,C.ETAT,C.IDC,P.DATEP,P.DATER
--						FROM OUVRAGE O,COPIE C,PRET P
--						WHERE C.IDC=P.IDC AND O.IDO=C.IDO AND C.ETAT='D' AND P.DATER IS NULL )
--		LOOP
--		DBMS_OUTPUT.PUT_LINE (REC_AFF_INC.TITRE||' '||REC_AFF_INC.IDC||' '||REC_AFF_INC.ETAT||' '||REC_AFF_INC.DATEP||' '||REC_AFF_INC.DATER);
--		END LOOP;
--	END P_AFF_INC;
--/

--Q2
--		CREATE OR REPLACE PROCEDURE P_CORR_INC
--		AS
--		CURSOR CUR_CORR_INC IS SELECT C.IDC,C.ETAT,P.DATER FROM COPIE C,PRET P WHERE C.IDC=P.IDC AND P.DATER IS NULL FOR UPDATE OF C.ETAT NOWAIT ;
--
--		BEGIN
--		FOR REC_CORR_INC IN CUR_CORR_INC LOOP
--      UPDATE COPIE SET COPIE.ETAT='P' WHERE CURRENT OF CUR_CORR_INC ;
--		END LOOP ;
--		END P_CORR_INC;
--/

--Q3

--CREATE OR REPLACE PROCEDURE P_AFF_PRETS (p_cin IN VARCHAR2 )
--IS
--	BEGIN
--		FOR REC_AFF_PRETS IN (SELECT E.IDE,E.CIN,C.IDC,O.TITRE,P.DATEP,P.DATER FROM ETUDIANT E,COPIE C, OUVRAGE O, PRET P
--					WHERE E.IDE=P.IDE AND C.IDC=P.IDC AND O.IDO=C.IDO AND p_cin=E.CIN)
--		LOOP
--			DBMS_OUTPUT.PUT_LINE(REC_AFF_PRETS.IDE||' '||REC_AFF_PRETS.CIN||' '||REC_AFF_PRETS.IDC||' '||REC_AFF_PRETS.TITRE||' '||REC_AFF_PRETS.DATEP||' '||REC_AFF_PRETS.DATER);
--		END LOOP ;
--	END P_AFF_PRETS;
--	/

--Q4

--CREATE OR REPLACE TRIGGER T_MAJ_P BEFORE INSERT ON PRET FOR EACH ROW
--	BEGIN
--		UPDATE COPIE SET COPIE.ETAT='P'
--		WHERE COPIE.IDC=:NEW.IDC;
--		FOR REC_MAJ_P IN (SELECT USER FROM DUAL ) LOOP
--		SELECT IDB INTO :NEW.IDB FROM BIBLIO WHERE NOM=REC_MAJ_P.USER ;
--		END LOOP ;
--	END;
--/

--Q5

--CREATE OR REPLACE PROCEDURE P_INSERT_PRET (p_ido IN VARCHAR2, p_cin IN VARCHAR2, p_verif OUT NUMBER)
--AS
--	v_nb NUMBER;
--	v_idc COPIE.IDC%TYPE;
--  v_ide ETUDIANT.IDE%TYPE;
--	BEGIN
--		SELECT COUNT(*) INTO v_nb FROM COPIE WHERE IDO=p_ido AND ETAT='D';
--		IF v_nb!=0 THEN
--			SELECT IDE INTO v_ide FROM ETUDIANT WHERE CIN=p_cin ;
--			SELECT IDC INTO v_idc FROM COPIE WHERE IDO=p_ido AND ETAT='D' AND ROWNUM=1 ;
--			INSERT INTO PRET VALUES (v_idc,v_ide,SYSDATE,NULL,NULL,NULL);
--			p_verif:=1;
--		ELSE
--			p_verif:=-1;
--		END IF;
--		DBMS_OUTPUT.PUT_LINE(p_verif);
--	END P_INSERT_PRET;
--/

--l'appel de P_INSERT_PRET:
--	DECLARE
--	verif NUMBER ;
--	BEGIN
--	P_INSERT_PRET('O1','47094273',verif);
--	END;
--	/

--Q6

--CREATE OR REPLACE TRIGGER T_MAJ_D AFTER UPDATE OF DATER ON PRET FOR EACH ROW
--	BEGIN
--		UPDATE COPIE SET COPIE.ETAT='D'
--		WHERE COPIE.IDC=:NEW.IDC AND :OLD.DATER IS NULL AND :NEW.DATER IS NOT NULL ;
--	END;
--/

--Q7

--CREATE OR REPLACE PROCEDURE P_UPDATE_RETOUR (p_cin IN VARCHAR2, p_idc IN VARCHAR2, p_avis IN VARCHAR2)
--AS
--v_idb VARCHAR2(10);
--	BEGIN
--		FOR REC_MAJ_P IN (SELECT USER FROM DUAL ) LOOP
--		SELECT IDB INTO v_idb FROM BIBLIO WHERE NOM=REC_MAJ_P.USER ;
--		END LOOP ;
--		UPDATE PRET SET DATER=SYSDATE, AVIS=p_avis, IDB=v_idb
--		WHERE IDC=p_idc AND IDE IN (SELECT IDE FROM ETUDIANT WHERE CIN=p_cin );
--	END P_UPDATE_RETOUR;
--/

--Q8

--CREATE OR REPLACE PROCEDURE P_MAJ_LIKES
--IS
--	BEGIN
--	FOR REC_MAJ_LIKES IN (SELECT OUVRAGE.IDO,PRET.AVIS FROM COPIE,OUVRAGE,PRET WHERE COPIE.IDC=PRET.IDC AND COPIE.IDO=OUVRAGE.IDO ORDER BY OUVRAGE.IDO)
--	LOOP
--	IF REC_MAJ_LIKES.AVIS='LIKE' THEN
--		UPDATE OUVRAGE SET OUVRAGE.LIKES=(OUVRAGE.LIKES+1) WHERE REC_MAJ_LIKES.IDO=OUVRAGE.IDO;
--	ELSIF REC_MAJ_LIKES.AVIS='DISLIKE' THEN
--		UPDATE OUVRAGE SET OUVRAGE.DISLIKES=(OUVRAGE.DISLIKES+1) WHERE REC_MAJ_LIKES.IDO=OUVRAGE.IDO;
--	END IF;
--	END LOOP ;
--	END P_MAJ_LIKES;
--/

--Q9

--CREATE OR REPLACE TRIGGER T_MAJ_AVIS AFTER UPDATE OF AVIS ON PRET FOR EACH ROW
--BEGIN
--	IF :NEW.AVIS='LIKE' THEN
--	UPDATE OUVRAGE SET LIKES=(LIKES+1) WHERE IDO IN (SELECT IDO FROM COPIE WHERE IDC=:NEW.IDC);
--	ELSIF :NEW.AVIS='DISLIKE' THEN
--	UPDATE OUVRAGE SET DISLIKES=(DISLIKES+1) WHERE IDO IN (SELECT IDO FROM COPIE WHERE IDC=:NEW.IDC);
--	END IF;
--END;
--/

--Q10
--CREATE OR REPLACE FUNCTION F_AVIS (p_ido IN VARCHAR2)RETURN VARCHAR2
--IS
--v_likes NUMBER;
--v_dislikes NUMBER;
--v_avis VARCHAR2(30);
--	BEGIN
--		SELECT LIKES INTO v_likes FROM OUVRAGE WHERE IDO=p_ido;
--		SELECT DISLIKES INTO v_dislikes FROM OUVRAGE WHERE IDO=p_ido;
--		v_avis:='LIKES '||v_likes||' DISLIKES '||v_dislikes;
--	RETURN v_avis;
--	END F_AVIS;
--/

--Appel de la fonction F_AVIS:
--	DECLARE
--	v_aviss VARCHAR2(30);
--	BEGIN
--		v_aviss:=F_AVIS('O7');
--		DBMS_OUTPUT.PUT_LINE(v_avisss);
--	END;
--/

--Q11

CREATE OR REPLACE VIEW V_CTO AS SELECT ETUDIANT.CURSUS AS CURSUS, OUVRAGE.THEME AS THEME, OUVRAGE.IDO AS IDO FROM ETUDIANT,OUVRAGE WHERE ;
